/* Automatically generated nanopb header */
/* Generated by nanopb-0.3.9.4 at Fri Dec 13 12:06:04 2019. */

#ifndef PB_OBJECT_CONFIG_PB_H_INCLUDED
#define PB_OBJECT_CONFIG_PB_H_INCLUDED
#include <pb.h>

/* @@protoc_insertion_point(includes) */
#if PB_PROTO_HEADER_VERSION != 30
#error Regenerate this file with the current version of nanopb generator.
#endif

#ifdef __cplusplus
extern "C" {
#endif

/* Struct definitions */
typedef struct _ControllerObjectsConfig {
    uint32_t number_of_pixels;
    pb_callback_t segments;
/* @@protoc_insertion_point(struct:ControllerObjectsConfig) */
} ControllerObjectsConfig;

typedef struct _Segment {
    char name[10];
    pb_callback_t indices;
/* @@protoc_insertion_point(struct:Segment) */
} Segment;

/* Default values for struct fields */

/* Initializer values for message structs */
#define Segment_init_default                     {"", {{NULL}, NULL}}
#define ControllerObjectsConfig_init_default     {0, {{NULL}, NULL}}
#define Segment_init_zero                        {"", {{NULL}, NULL}}
#define ControllerObjectsConfig_init_zero        {0, {{NULL}, NULL}}

/* Field tags (for use in manual encoding/decoding) */
#define ControllerObjectsConfig_number_of_pixels_tag 1
#define ControllerObjectsConfig_segments_tag     2
#define Segment_name_tag                         1
#define Segment_indices_tag                      2

/* Struct field encoding specification for nanopb */
extern const pb_field_t Segment_fields[3];
extern const pb_field_t ControllerObjectsConfig_fields[3];

/* Maximum encoded size of messages (where known) */
/* Segment_size depends on runtime parameters */
/* ControllerObjectsConfig_size depends on runtime parameters */

/* Message IDs (where set with "msgid" option) */
#ifdef PB_MSGID

#define OBJECT_CONFIG_MESSAGES \


#endif

#ifdef __cplusplus
} /* extern "C" */
#endif
/* @@protoc_insertion_point(eof) */

#endif
